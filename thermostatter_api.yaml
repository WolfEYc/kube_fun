apiVersion: apps/v1
kind: Deployment
metadata:
  name: thermostatter-api
  labels: 
    name: "thermostatter-api"
  annotations:
    keel.sh/policy: all
    keel.sh/approvals: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thermostatter-api
  template:
    metadata:
      labels:
        app: thermostatter-api
    spec:
      containers:
      - name: thermostatter-api
        image: ghcr.io/wolfeyc/thermostatter-api:0.1.7
        ports: 
        - containerPort: 8080
      - env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "https://otel-collector.wolfeydev.com"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: wolfey-login
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wolfey-login
              key: password
        - name: AUTH_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: jwt
              key: private
        - name: DATABASE_URL
          value: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-service:5432/postgres
      imagePullSecrets:
        - name: github-container-registry
---
apiVersion: v1
kind: Service
metadata:
  name: thermostatter-api-service
spec:
  selector:
    app: thermostatter-api
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: thermostatter-api-ingress
spec:
  rules:
  - host: "thermostatter-api.wolfeydev.com"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: thermostatter-api-service
            port:
              number: 8080